((*- extends 'article.tplx' -*))

% display input without prompts:
((* block input scoped *))
\tcbset{coltitle=white!50!white,
        colbacktitle=white!75!black,
        colback=black!2!white,
        colframe=white!75!black,
        fonttitle=\bfseries\scriptsize}
\begin{tcolorbox}[title=Input:,
                  sharp corners,
                  rounded corners=north]
\begin{Verbatim}[fontsize=\scriptsize,commandchars=\\\{\}]
((( cell.source | highlight_code(strip_verbatim=True) )))
\end{Verbatim}
\end{tcolorbox}
((* endblock input *))


((* block execute_result scoped *))
    ((*- for type in output.data | filter_data_type -*))
        ((*- if type in ['text/plain']*))
\tcbset{coltitle=white!50!green,
        colbacktitle=white!25!white,
        colback=black!2!white,
        colframe=white!75!black,
        fonttitle=\bfseries\scriptsize,
        sharp corners=north}
\begin{tcolorbox}[sharp corners,
                  rounded corners=south,
                  colupper=green!50!magenta]
\scriptsize{Return:}
\tcblower
\begin{scriptsize}
\begin{Verbatim}[commandchars=\\\{\}]
((( output.data['text/plain'] | escape_latex )))
\end{Verbatim}
\end{scriptsize}
\end{tcolorbox}
        ((* else -*))
            ((* block data_priority scoped *))
            ((( super() )))
            ((* endblock *))
        ((*- endif -*))
    ((*- endfor -*))
((* endblock execute_result *))

% Display stream ouput with coloring
((* block stream *))
\tcbset{coltitle=white!50!blue,
        colbacktitle=white!25!white,
        colback=black!2!white,
        colframe=white!75!black,
        fonttitle=\bfseries\scriptsize,
        sharp corners=north}
\begin{tcolorbox}[sharp corners,
                  rounded corners=south,
                  colupper=blue!50!white]
\scriptsize{Output:}
\tcblower
\begin{scriptsize}
    \begin{Verbatim}[commandchars=\\\{\}]
((( output.text | escape_latex | ansi2latex )))
    \end{Verbatim}
\end{scriptsize}
\end{tcolorbox}
((* endblock stream *))


% Display error ouput with coloring
((* block error *))
\tcbset{coltitle=white!50!red,
        colbacktitle=white!25!white,
        colback=black!2!white,
        colframe=white!75!black,
        fonttitle=\bfseries\scriptsize,
        sharp corners=north}
\begin{tcolorbox}[sharp corners,
                  rounded corners=south,
                  colupper=red!50!white]
\scriptsize{Error}
\tcblower
\begin{scriptsize}
((( super() )))
\end{scriptsize}
\end{tcolorbox}
((* endblock error *))

((* block docclass *))
\documentclass{scrartcl}

\usepackage{amsmath}
\usepackage[pdftex]{graphicx}
\usepackage{tcolorbox}
\usepackage{placeins}

\AtBeginDocument{
\heavyrulewidth=.08em
\lightrulewidth=.05em
\cmidrulewidth=.03em
\belowrulesep=.65ex
\belowbottomsep=0pt
\aboverulesep=.4ex
\abovetopsep=0pt
\cmidrulesep=\doublerulesep
\cmidrulekern=.5em
\defaultaddspace=.5em
}

((* endblock docclass *))

% Author and Title from metadata
((* block maketitle *))

((*- if nb.metadata["latex_metadata"]: -*))
    ((*- if nb.metadata["latex_metadata"]["title"]: -*))
        \title{((( nb.metadata["latex_metadata"]["title"] )))}
    ((*- endif *))
((*- endif *))

((*- if nb.metadata["latex_metadata"]: -*))
    ((*- if nb.metadata["latex_metadata"]["subtitle"]: -*))
        \subtitle{((( nb.metadata["latex_metadata"]["subtitle"] )))}
    ((*- endif *))
((*- endif *))

((*- if nb.metadata["latex_metadata"]: -*))
    ((*- if nb.metadata["latex_metadata"]["author"]: -*))
        \author{((( nb.metadata["latex_metadata"]["author"] )))}
    ((*- else *))
        \author{Tam\'as G\'al}
    ((*- endif *))
((*- endif *))
\maketitle
((* endblock maketitle *))

% New mechanism for rendering figures with captions
((*- block data_png -*))
((*- if cell.metadata.widefigure: -*))
    ((( draw_widefigure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, cell.metadata.label) )))
((*- else -*))
    ((*- if cell.metadata.caption: -*))
        ((*- if cell.metadata.label: -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, cell.metadata.label) )))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, "") )))
        ((*- endif *))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/png'], "") )))
    ((*- endif *))
((*- endif *))
((*- endblock -*))
((*- block data_jpg -*))
((*- if cell.metadata.caption: -*))
    ((*- if cell.metadata.label: -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], cell.metadata.caption, cell.metadata.label) )))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], cell.metadata.caption, "") )))
    ((*- endif *))
((*- else -*))
    ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], "") )))
((*- endif *))
((*- endblock -*))
((*- block data_svg -*))
((*- if cell.metadata.caption: -*))
    ((*- if cell.metadata.label: -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], cell.metadata.caption, cell.metadata.label) )))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], cell.metadata.caption, "") )))
    ((*- endif *))
((*- else -*))
    ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], "") )))
((*- endif *))
((*- endblock -*))
((*- block data_pdf -*))
((*- if cell.metadata.widefigure: -*))
    ((( draw_widefigure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, cell.metadata.label) )))
((*- else -*))
    ((*- if cell.metadata.caption: -*))
        ((*- if cell.metadata.label: -*))
            ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, cell.metadata.label) )))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, "") )))
        ((*- endif *))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], "") )))
    ((*- endif *))
((*- endif *))
((*- endblock -*))

% Draw a figure using the graphicx package.
((* macro draw_figure_with_caption(filename, caption, label) -*))
((* set filename = filename | posix_path *))
((*- block figure scoped -*))
    \begin{figure}
        \begin{center}\adjustimage{max size={0.9\linewidth}{0.4\paperheight}}{((( filename )))}\end{center}
        \caption{((( caption )))}
        \label{((( label )))}
    \end{figure}
((*- endblock figure -*))
((*- endmacro *))

% Draw a figure using the graphicx package.
((* macro draw_widefigure_with_caption(filename, caption, label) -*))
((* set filename = filename | posix_path *))
((*- block figure_wide scoped -*))
    \begin{figure*}
        \begin{center}\adjustimage{max size={0.9\linewidth}{0.4\paperheight}}{((( filename )))}\end{center}
        \caption{((( caption )))}
        \label{((( label )))}
    \end{figure*}
((*- endblock figure_wide -*))
((*- endmacro *))




